{"version":3,"sources":["logo.svg","NotFound/NotFoundPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledButton","styled","button","StyledBox","Box","NotFoundPage","display","flexDirection","justifyContent","Typography","variant","align","color","onClick","window","location","href","TopPage","className","src","logo","alt","target","rel","App","basename","process","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,G,MAAA,IAA0B,kC,+CCuBnCA,EAAeC,IAAOC,OAAV,kRAgBZC,EAAYF,YAAOG,IAAPH,CAAH,ibAImC,0BAKnCI,EA1CgB,WAI9B,OACC,eAACF,EAAD,CAAWG,QAAQ,OAAOC,cAAc,SAASC,eAAe,SAAhE,UACC,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,MAAM,UAA9C,uBAGA,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,MAAM,UAA9C,gEAGA,cAACZ,EAAD,CAAca,QAXI,WACnBC,OAAOC,SAASC,KAJF,8BAcb,8B,eC6BH,SAASC,IACR,OACC,qBAAKC,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACC,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACM,+CADN,0BAGA,mBACCH,UAAU,WACVF,KAAK,sBACLM,OAAO,SACPC,IAAI,sBAJL,8BAwBWC,MAXf,WACC,OACC,qBAAKN,UAAU,MAAf,SACC,eAAC,IAAD,CAAYO,SAAUC,GAAtB,UACC,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWX,IAC3B,cAAC,IAAD,CAAOW,UAAWvB,UC3DPwB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff4f2328.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst homeUrl = \"https://tdrj2716.github.io\";\n\nconst NotFoundPage: React.FC = () => {\n\tconst handleClick = () => {\n\t\twindow.location.href = homeUrl;\n\t};\n\treturn (\n\t\t<StyledBox display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n\t\t\t<Typography variant=\"h1\" align=\"center\" color=\"inherit\">\n\t\t\t\t404 Error\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\" align=\"center\" color=\"inherit\">\n\t\t\t\tSorry, but we can't find what you are looking for.\n\t\t\t</Typography>\n\t\t\t<StyledButton onClick={handleClick}>See top page</StyledButton>\n\t\t</StyledBox>\n\t);\n};\n\nconst StyledButton = styled.button`\n\talign-self: center;\n\tmargin-top: 70px;\n\tborder: none;\n\tsize: 240px 100px;\n\tbackground: transparent;\n\tfont-size: 36px;\n\topacity: 0.8;\n\ttransition: opacity 0.2s;\n\n\t:hover {\n\t\topacity: 0.5;\n\t\ttransition: opacity 0.2s;\n\t}\n`;\n\nconst StyledBox = styled(Box)`\n\twidth: 100%;\n\theight: 100vh;\n\t/* 生成した404 pageが参照出来るよう、ビルド時に変更されないpublicディレクトリに背景画像を退避させておく */\n\tbackground-image: url(${process.env.PUBLIC_URL + \"/monochrome-beach.jpeg\"});\n\tbackground-size: cover;\n\tbackground-position: center;\n`;\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n// function App(): JSX.Element {\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<header className=\"App-header\">\n// \t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n// \t\t\t\t<p>\n// \t\t\t\t\tEdit <code>src/App.tsx</code> and save to reload.\n// \t\t\t\t</p>\n// \t\t\t\t<a\n// \t\t\t\t\tclassName=\"App-link\"\n// \t\t\t\t\thref=\"https://reactjs.org\"\n// \t\t\t\t\ttarget=\"_blank\"\n// \t\t\t\t\trel=\"noopener noreferrer\"\n// \t\t\t\t>\n// \t\t\t\t\tLearn React\n// \t\t\t\t</a>\n// \t\t\t</header>\n// \t\t</div>\n// \t);\n// }\n\n/**\n * 404 pageを出力するための記述\n * 1. ./package.jsonのscriptに\n * \t\t\"postbuild\": \"cp build/index.html build/404.html\",\n * \t\tを記述、上のApp部分をコメントアウトしてyarn buildを実行して404.htmlを生成\n * 2. 404.htmlを生成後、\"postbuild\"の部分を消去、下のApp部分をコメントアウトした後に再度yarn buildし、index.htmlを生成\n * 3. 404.html, index.htmlを生成した後に\n * \t\tgh-pages -b gh-page -d build\n * \t\tを実行\n */\nimport NotFoundPage from \"./NotFound/NotFoundPage\";\n\n// function App(): JSX.Element {\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<NotFoundPage />\n// \t\t</div>\n// \t);\n// }\n\nimport { HashRouter, Route } from \"react-router-dom\";\n\nfunction TopPage(): JSX.Element {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t<p>\n\t\t\t\t\tEdit <code>src/App.tsx</code> and save to reload.\n\t\t\t\t</p>\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\thref=\"https://reactjs.org\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tLearn React\n\t\t\t\t</a>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nfunction App(): JSX.Element {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<HashRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Route path=\"/\" component={TopPage} />\n\t\t\t\t<Route component={NotFoundPage} />\n\t\t\t</HashRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}